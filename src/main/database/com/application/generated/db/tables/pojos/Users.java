/*
 * This file is generated by jOOQ.
 */
package com.application.generated.db.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String username;
    private final String password;
    private final Boolean isAdmin;

    public Users(Users value) {
        this.id = value.id;
        this.username = value.username;
        this.password = value.password;
        this.isAdmin = value.isAdmin;
    }

    public Users(
        Integer id,
        String username,
        String password,
        Boolean isAdmin
    ) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.isAdmin = isAdmin;
    }

    /**
     * Getter for <code>USERS.ID</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>USERS.USERNAME</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Getter for <code>USERS.PASSWORD</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>USERS.IS_ADMIN</code>.
     */
    public Boolean getIsAdmin() {
        return this.isAdmin;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.isAdmin == null) {
            if (other.isAdmin != null)
                return false;
        }
        else if (!this.isAdmin.equals(other.isAdmin))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.isAdmin == null) ? 0 : this.isAdmin.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(isAdmin);

        sb.append(")");
        return sb.toString();
    }
}
