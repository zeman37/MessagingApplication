/*
 * This file is generated by jOOQ.
 */
package com.application.generated.db.tables.records;


import com.application.generated.db.tables.Messages;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record4<Integer, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>MESSAGES.ID</code>.
     */
    public MessagesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>MESSAGES.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>MESSAGES.USER_ID</code>.
     */
    public MessagesRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>MESSAGES.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>MESSAGES.TEXT</code>.
     */
    public MessagesRecord setText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>MESSAGES.TEXT</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>MESSAGES.MESSAGE_DATE</code>.
     */
    public MessagesRecord setMessageDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>MESSAGES.MESSAGE_DATE</code>.
     */
    public LocalDateTime getMessageDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Messages.MESSAGES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Messages.MESSAGES.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Messages.MESSAGES.TEXT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Messages.MESSAGES.MESSAGE_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public LocalDateTime component4() {
        return getMessageDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public LocalDateTime value4() {
        return getMessageDate();
    }

    @Override
    public MessagesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessagesRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public MessagesRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public MessagesRecord value4(LocalDateTime value) {
        setMessageDate(value);
        return this;
    }

    @Override
    public MessagesRecord values(Integer value1, Integer value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Integer id, Integer userId, String text, LocalDateTime messageDate) {
        super(Messages.MESSAGES);

        setId(id);
        setUserId(userId);
        setText(text);
        setMessageDate(messageDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(com.application.generated.db.tables.pojos.Messages value) {
        super(Messages.MESSAGES);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setText(value.getText());
            setMessageDate(value.getMessageDate());
            resetChangedOnNotNull();
        }
    }
}
